From ac9626b9bd6314f1b56b867d62d1afc235a7af0e Mon Sep 17 00:00:00 2001
From: Jon West <electrikjesus@gmail.com>
Date: Sat, 30 Mar 2019 15:19:40 -0400
Subject: [PATCH] Revert "Settings: per-app cellular data and wifi
 restrictions"

This reverts commit 1507a981c5997df352f4f0bb2a8d9b8eba4ed096.

Conflicts:
	res/values/bliss_strings.xml

Change-Id: I27a9076429915c7e23e760f1ec7a657830618817
---
 res/values/bliss_strings.xml                  |  6 --
 res/xml/app_data_usage.xml                    | 10 --
 .../settings/datausage/AppDataUsage.java      | 96 +++----------------
 3 files changed, 12 insertions(+), 100 deletions(-)

diff --git a/res/values/bliss_strings.xml b/res/values/bliss_strings.xml
index 0ac7984b02..239e306257 100644
--- a/res/values/bliss_strings.xml
+++ b/res/values/bliss_strings.xml
@@ -404,12 +404,6 @@
     <!-- Running services -->
     <string name="background_processes_settings_title">Background processes</string>
 
-    <!-- Per-app data restrictions -->
-    <string name="data_usage_app_restrict_data">Cellular data</string>
-    <string name="data_usage_app_restrict_data_summary">Enable usage of cellular data</string>
-    <string name="data_usage_app_restrict_wifi">Wi\u2011Fi data</string>
-    <string name="data_usage_app_restrict_wifi_summary">Enable usage of Wi\u2011Fi data</string>
-
     <!-- Changelog -->
     <string name="changelog_title">Changelog</string>
     <string name="changelog_summary">Recent Changes</string>
diff --git a/res/xml/app_data_usage.xml b/res/xml/app_data_usage.xml
index 65c0a565de..5eaee969c2 100644
--- a/res/xml/app_data_usage.xml
+++ b/res/xml/app_data_usage.xml
@@ -54,16 +54,6 @@
             android:key="app_settings"
             android:title="@string/data_usage_app_settings" />
 
-        <SwitchPreference
-            android:key="restrict_wlan"
-            android:title="@string/data_usage_app_restrict_wifi"
-            android:summary="@string/data_usage_app_restrict_wifi_summary" />
-
-        <SwitchPreference
-            android:key="restrict_data"
-            android:title="@string/data_usage_app_restrict_data"
-            android:summary="@string/data_usage_app_restrict_data_summary" />
-
         <com.android.settingslib.RestrictedSwitchPreference
             android:key="restrict_background"
             android:title="@string/data_usage_app_restrict_background"
diff --git a/src/com/android/settings/datausage/AppDataUsage.java b/src/com/android/settings/datausage/AppDataUsage.java
index 64b6c9a844..760692f256 100644
--- a/src/com/android/settings/datausage/AppDataUsage.java
+++ b/src/com/android/settings/datausage/AppDataUsage.java
@@ -15,8 +15,6 @@
 package com.android.settings.datausage;
 
 import static android.net.NetworkPolicyManager.POLICY_REJECT_METERED_BACKGROUND;
-import static android.net.NetworkPolicyManager.POLICY_REJECT_ON_DATA;
-import static android.net.NetworkPolicyManager.POLICY_REJECT_ON_WLAN;
 
 import android.app.Activity;
 import android.app.LoaderManager;
@@ -28,7 +26,6 @@ import android.content.pm.PackageManager;
 import android.graphics.drawable.Drawable;
 import android.net.INetworkStatsSession;
 import android.net.NetworkPolicy;
-import android.net.NetworkPolicyManager;
 import android.net.NetworkStatsHistory;
 import android.net.NetworkTemplate;
 import android.net.TrafficStats;
@@ -36,7 +33,6 @@ import android.os.Bundle;
 import android.os.RemoteException;
 import android.os.UserHandle;
 import android.support.annotation.VisibleForTesting;
-import android.support.v14.preference.SwitchPreference;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceCategory;
 import android.util.ArraySet;
@@ -72,8 +68,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     private static final String KEY_BACKGROUND_USAGE = "background_usage";
     private static final String KEY_APP_SETTINGS = "app_settings";
     private static final String KEY_RESTRICT_BACKGROUND = "restrict_background";
-    private static final String KEY_RESTRICT_DATA = "restrict_data";
-    private static final String KEY_RESTRICT_WLAN = "restrict_wlan";
     private static final String KEY_APP_LIST = "app_list";
     private static final String KEY_CYCLE = "cycle";
     private static final String KEY_UNRESTRICTED_DATA = "unrestricted_data_saver";
@@ -88,8 +82,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     private Preference mBackgroundUsage;
     private Preference mAppSettings;
     private RestrictedSwitchPreference mRestrictBackground;
-    private SwitchPreference mRestrictData;
-    private SwitchPreference mRestrictWlan;
     private PreferenceCategory mAppList;
 
     private Drawable mIcon;
@@ -103,7 +95,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     private ChartData mChartData;
     private NetworkTemplate mTemplate;
     private NetworkPolicy mPolicy;
-    private NetworkPolicyManager mPolicyManager;
     private AppItem mAppItem;
     private Intent mAppSettingsIntent;
     private SpinnerPreference mCycle;
@@ -122,7 +113,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             throw new RuntimeException(e);
         }
 
-        mPolicyManager = NetworkPolicyManager.from(getContext());
         mAppItem = (args != null) ? (AppItem) args.getParcelable(ARG_APP_ITEM) : null;
         mTemplate = (args != null) ? (NetworkTemplate) args.getParcelable(ARG_NETWORK_TEMPLATE)
                 : null;
@@ -170,16 +160,10 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             if (!UserHandle.isApp(mAppItem.key)) {
                 removePreference(KEY_UNRESTRICTED_DATA);
                 removePreference(KEY_RESTRICT_BACKGROUND);
-                removePreference(KEY_RESTRICT_DATA);
-                removePreference(KEY_RESTRICT_WLAN);
             } else {
                 mRestrictBackground = (RestrictedSwitchPreference) findPreference(
                         KEY_RESTRICT_BACKGROUND);
                 mRestrictBackground.setOnPreferenceChangeListener(this);
-                mRestrictData = (SwitchPreference) findPreference(KEY_RESTRICT_DATA);
-                mRestrictData.setOnPreferenceChangeListener(this);
-                mRestrictWlan = (SwitchPreference) findPreference(KEY_RESTRICT_WLAN);
-                mRestrictWlan.setOnPreferenceChangeListener(this);
                 mUnrestrictedData = (RestrictedSwitchPreference) findPreference(
                         KEY_UNRESTRICTED_DATA);
                 mUnrestrictedData.setOnPreferenceChangeListener(this);
@@ -220,8 +204,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             removePreference(KEY_UNRESTRICTED_DATA);
             removePreference(KEY_APP_SETTINGS);
             removePreference(KEY_RESTRICT_BACKGROUND);
-            removePreference(KEY_RESTRICT_DATA);
-            removePreference(KEY_RESTRICT_WLAN);
             removePreference(KEY_APP_LIST);
         }
     }
@@ -258,14 +240,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
             mDataSaverBackend.setIsBlacklisted(mAppItem.key, mPackageName, !(Boolean) newValue);
             updatePrefs();
             return true;
-        } else if (preference == mRestrictData) {
-            setAppRestrictData(!(Boolean) newValue);
-            updatePrefs();
-            return true;
-        } else if (preference == mRestrictWlan) {
-            setAppRestrictWlan(!(Boolean) newValue);
-            updatePrefs();
-            return true;
         } else if (preference == mUnrestrictedData) {
             mDataSaverBackend.setIsWhitelisted(mAppItem.key, mPackageName, (Boolean) newValue);
             return true;
@@ -286,36 +260,21 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
 
     @VisibleForTesting
     void updatePrefs() {
-        updatePrefs(getAppRestrictBackground(), getUnrestrictData(),
-                getAppRestrictData(), getAppRestrictWlan());
+        updatePrefs(getAppRestrictBackground(), getUnrestrictData());
     }
 
-    private void updatePrefs(boolean restrictBackground, boolean unrestrictData,
-            boolean restrictData, boolean restrictWlan) {
+    private void updatePrefs(boolean restrictBackground, boolean unrestrictData) {
         final EnforcedAdmin admin = RestrictedLockUtils.checkIfMeteredDataRestricted(
                 getContext(), mPackageName, UserHandle.getUserId(mAppItem.key));
         if (mRestrictBackground != null) {
-            if (restrictData) {
-                mRestrictBackground.setEnabled(false);
-                mRestrictBackground.setChecked(false);
-            } else {
-                mRestrictBackground.setEnabled(true);
-                mRestrictBackground.setChecked(!restrictBackground);
-                mRestrictBackground.setDisabledByAdmin(admin);
-            }
-        }
-        if (mRestrictData != null) {
-            mRestrictData.setChecked(!restrictData);
-        }
-        if (mRestrictWlan != null) {
-            mRestrictWlan.setChecked(!restrictWlan);
+            mRestrictBackground.setChecked(!restrictBackground);
+            mRestrictBackground.setDisabledByAdmin(admin);
         }
         if (mUnrestrictedData != null) {
-            if (restrictData || restrictBackground) {
-                mUnrestrictedData.setEnabled(false);
-                mUnrestrictedData.setChecked(false);
+            if (restrictBackground) {
+                mUnrestrictedData.setVisible(false);
             } else {
-                mUnrestrictedData.setEnabled(true);
+                mUnrestrictedData.setVisible(true);
                 mUnrestrictedData.setChecked(unrestrictData);
                 mUnrestrictedData.setDisabledByAdmin(admin);
             }
@@ -354,15 +313,9 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     }
 
     private boolean getAppRestrictBackground() {
-        return getAppRestriction(POLICY_REJECT_METERED_BACKGROUND);
-    }
-
-    private boolean getAppRestrictData() {
-        return getAppRestriction(POLICY_REJECT_ON_DATA);
-    }
-
-    private boolean getAppRestrictWlan() {
-        return getAppRestriction(POLICY_REJECT_ON_WLAN);
+        final int uid = mAppItem.key;
+        final int uidPolicy = services.mPolicyManager.getUidPolicy(uid);
+        return (uidPolicy & POLICY_REJECT_METERED_BACKGROUND) != 0;
     }
 
     private boolean getUnrestrictData() {
@@ -372,29 +325,6 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
         return false;
     }
 
-    private boolean getAppRestriction(int policy) {
-        final int uid = mAppItem.key;
-        final int uidPolicy = services.mPolicyManager.getUidPolicy(uid);
-        return (uidPolicy & policy) != 0;
-    }
-
-    private void setAppRestrictData(boolean restrict) {
-        setAppRestriction(POLICY_REJECT_ON_DATA, restrict);
-    }
-
-    private void setAppRestrictWlan(boolean restrict) {
-        setAppRestriction(POLICY_REJECT_ON_WLAN, restrict);
-    }
-
-    private void setAppRestriction(int policy, boolean restrict) {
-        final int uid = mAppItem.key;
-        if (restrict) {
-            mPolicyManager.addUidPolicy(uid, policy);
-        } else {
-            mPolicyManager.removeUidPolicy(uid, policy);
-        }
-    }
-
     @Override
     public void onViewCreated(View view, Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
@@ -498,16 +428,14 @@ public class AppDataUsage extends DataUsageBase implements Preference.OnPreferen
     @Override
     public void onWhitelistStatusChanged(int uid, boolean isWhitelisted) {
         if (mAppItem.uids.get(uid, false)) {
-            updatePrefs(getAppRestrictBackground(), isWhitelisted,
-                    getAppRestrictData(), getAppRestrictWlan());
+            updatePrefs(getAppRestrictBackground(), isWhitelisted);
         }
     }
 
     @Override
     public void onBlacklistStatusChanged(int uid, boolean isBlacklisted) {
         if (mAppItem.uids.get(uid, false)) {
-            updatePrefs(isBlacklisted, getUnrestrictData(),
-                    getAppRestrictData(), getAppRestrictWlan());
+            updatePrefs(isBlacklisted, getUnrestrictData());
         }
     }
 }
-- 
2.17.1

