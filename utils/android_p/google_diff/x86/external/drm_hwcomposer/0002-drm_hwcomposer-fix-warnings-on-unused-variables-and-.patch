From 7f4b4817c92e89508859d7026f5755972f6b733a Mon Sep 17 00:00:00 2001
From: Rob Herring <robh@kernel.org>
Date: Wed, 29 Nov 2017 10:19:57 -0600
Subject: [PATCH 2/7] drm_hwcomposer: fix warnings on unused variables and
 parameters

AOSP master now builds by default with -Werror, so fix all the warnings.
All the warnings are related to unused variables and parameters.

Reviewed-by: Robert Foss <robert.foss@collabora.com>
Signed-off-by: Rob Herring <robh@kernel.org>

Conflicts:
	drmdisplaycompositor.cpp

Change-Id: I45e8fce3a073d33c6f68cc9a42d30a78eb84bc28
---
 drmcrtc.cpp              | 7 +------
 drmcrtc.h                | 6 ------
 drmdisplaycompositor.cpp | 4 +---
 drmencoder.cpp           | 1 -
 drmencoder.h             | 2 --
 drmhwctwo.cpp            | 3 +--
 glworker.cpp             | 1 -
 platform.cpp             | 4 ++--
 8 files changed, 5 insertions(+), 23 deletions(-)

diff --git a/drmcrtc.cpp b/drmcrtc.cpp
index 1fbdc12..4816b5e 100644
--- a/drmcrtc.cpp
+++ b/drmcrtc.cpp
@@ -31,12 +31,7 @@ DrmCrtc::DrmCrtc(DrmResources *drm, drmModeCrtcPtr c, unsigned pipe)
       id_(c->crtc_id),
       pipe_(pipe),
       display_(-1),
-      x_(c->x),
-      y_(c->y),
-      width_(c->width),
-      height_(c->height),
-      mode_(&c->mode),
-      mode_valid_(c->mode_valid) {
+      mode_(&c->mode) {
 }
 
 int DrmCrtc::Init() {
diff --git a/drmcrtc.h b/drmcrtc.h
index ad95352..d4df998 100644
--- a/drmcrtc.h
+++ b/drmcrtc.h
@@ -53,13 +53,7 @@ class DrmCrtc {
   unsigned pipe_;
   int display_;
 
-  uint32_t x_;
-  uint32_t y_;
-  uint32_t width_;
-  uint32_t height_;
-
   DrmMode mode_;
-  bool mode_valid_;
 
   DrmProperty active_property_;
   DrmProperty mode_property_;
diff --git a/drmdisplaycompositor.cpp b/drmdisplaycompositor.cpp
index 585e223..bee16f4 100644
--- a/drmdisplaycompositor.cpp
+++ b/drmdisplaycompositor.cpp
@@ -571,8 +571,7 @@ int DrmDisplayCompositor::CommitFrame(DrmDisplayComposition *display_comp,
   std::vector<DrmHwcLayer> &layers = display_comp->layers();
   std::vector<DrmCompositionPlane> &comp_planes =
       display_comp->composition_planes();
-  std::vector<DrmCompositionRegion> &pre_comp_regions =
-      display_comp->pre_comp_regions();
+  uint64_t out_fences[drm_->crtcs().size()];
 
   DrmConnector *connector = drm_->GetConnectorForDisplay(display_);
   if (!connector) {
@@ -752,7 +751,6 @@ int DrmDisplayCompositor::CommitFrame(DrmDisplayComposition *display_comp,
     }
   }
 
-out:
   if (!ret) {
     uint32_t flags = DRM_MODE_ATOMIC_ALLOW_MODESET;
     if (test_only)
diff --git a/drmencoder.cpp b/drmencoder.cpp
index 1d4ebdc..3d762f3 100644
--- a/drmencoder.cpp
+++ b/drmencoder.cpp
@@ -27,7 +27,6 @@ DrmEncoder::DrmEncoder(drmModeEncoderPtr e, DrmCrtc *current_crtc,
                        const std::vector<DrmCrtc *> &possible_crtcs)
     : id_(e->encoder_id),
       crtc_(current_crtc),
-      type_(e->encoder_type),
       possible_crtcs_(possible_crtcs) {
 }
 
diff --git a/drmencoder.h b/drmencoder.h
index ed3c21e..58ccbfb 100644
--- a/drmencoder.h
+++ b/drmencoder.h
@@ -45,8 +45,6 @@ class DrmEncoder {
   uint32_t id_;
   DrmCrtc *crtc_;
 
-  uint32_t type_;
-
   std::vector<DrmCrtc *> possible_crtcs_;
 };
 }
diff --git a/drmhwctwo.cpp b/drmhwctwo.cpp
index 8c853f4..c42cf92 100644
--- a/drmhwctwo.cpp
+++ b/drmhwctwo.cpp
@@ -242,7 +242,6 @@ HWC2::Error DrmHwcTwo::HwcDisplay::RegisterVsyncCallback(
 
 HWC2::Error DrmHwcTwo::HwcDisplay::AcceptDisplayChanges() {
   supported(__func__);
-  uint32_t num_changes = 0;
   for (std::pair<const hwc2_layer_t, DrmHwcTwo::HwcLayer> &l : layers_)
     l.second.accept_type_change();
   return HWC2::Error::None;
@@ -619,7 +618,7 @@ HWC2::Error DrmHwcTwo::HwcDisplay::SetActiveConfig(hwc2_config_t config) {
 HWC2::Error DrmHwcTwo::HwcDisplay::SetClientTarget(buffer_handle_t target,
                                                    int32_t acquire_fence,
                                                    int32_t dataspace,
-                                                   hwc_region_t damage) {
+                                                   hwc_region_t /*damage*/) {
   supported(__func__);
   UniqueFd uf(acquire_fence);
 
diff --git a/glworker.cpp b/glworker.cpp
index e12995e..d66613c 100644
--- a/glworker.cpp
+++ b/glworker.cpp
@@ -446,7 +446,6 @@ int GLWorkerCompositor::Init() {
   const char *egl_extensions;
   const char *gl_extensions;
   EGLint num_configs;
-  EGLint attribs[] = {EGL_WIDTH, 1, EGL_HEIGHT, 1, EGL_NONE, EGL_NONE};
   EGLConfig egl_config;
 
   // clang-format off
diff --git a/platform.cpp b/platform.cpp
index e920872..56ab37e 100644
--- a/platform.cpp
+++ b/platform.cpp
@@ -142,8 +142,8 @@ int PlanStageProtected::ProvisionPlanes(
 
 int PlanStagePrecomp::ProvisionPlanes(
     std::vector<DrmCompositionPlane> *composition,
-    std::map<size_t, DrmHwcLayer *> &layers, DrmCrtc *crtc,
-    std::vector<DrmPlane *> *planes) {
+    std::map<size_t, DrmHwcLayer *> &layers, DrmCrtc * /*crtc*/,
+    std::vector<DrmPlane *> * /*planes*/) {
   DrmCompositionPlane *precomp = GetPrecomp(composition);
   if (!precomp || precomp->source_layers().empty())
     return 0;
-- 
2.17.1

