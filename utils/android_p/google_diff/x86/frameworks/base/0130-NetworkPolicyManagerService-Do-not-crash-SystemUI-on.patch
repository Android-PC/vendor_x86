From 336b0d24fd277cfa621f1f6146cd922b7dd94770 Mon Sep 17 00:00:00 2001
From: Jackeagle <jackeagle102@gmail.com>
Date: Sun, 31 Mar 2019 17:19:45 +0200
Subject: [PATCH] NetworkPolicyManagerService: Do not crash SystemUI on
 notification access

- This fixes following

03-30 22:16:48.139  3064  3080 E AndroidRuntime: *** FATAL EXCEPTION IN SYSTEM PROCESS: android.ui
03-30 22:16:48.139  3064  3080 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.app.usage.UsageStatsManagerInternal.isAppIdle(java.lang.String, int, int)' on a null object reference

Change-Id: I1b3e7ba8ed2c0990863cad742fac324abd022b9c
Signed-off-by: Jackeagle <jackeagle102@gmail.com>
---
 .../net/NetworkPolicyManagerService.java      | 27 +++++++++++--------
 1 file changed, 16 insertions(+), 11 deletions(-)

diff --git a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
index db33bd8f08d..d66ecac0064 100644
--- a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
+++ b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
@@ -853,7 +853,8 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
             mContext.getSystemService(ConnectivityManager.class).registerNetworkCallback(
                     new NetworkRequest.Builder().build(), mNetworkCallback);
 
-            mUsageStats.addAppIdleStateChangeListener(new AppIdleStateChangeListener());
+            if (mUsageStats != null)
+                mUsageStats.addAppIdleStateChangeListener(new AppIdleStateChangeListener());
 
             // Listen for subscriber changes
             mContext.getSystemService(SubscriptionManager.class).addOnSubscriptionsChangedListener(
@@ -3644,14 +3645,16 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
             final List<UserInfo> users = mUserManager.getUsers();
             for (int ui = users.size() - 1; ui >= 0; ui--) {
                 UserInfo user = users.get(ui);
-                int[] idleUids = mUsageStats.getIdleUidsForUser(user.id);
-                for (int uid : idleUids) {
-                    if (!mPowerSaveTempWhitelistAppIds.get(UserHandle.getAppId(uid), false)) {
-                        // quick check: if this uid doesn't have INTERNET permission, it
-                        // doesn't have network access anyway, so it is a waste to mess
-                        // with it here.
-                        if (hasInternetPermissions(uid)) {
-                            uidRules.put(uid, FIREWALL_RULE_DENY);
+                if (mUsageStats != null) {
+                    int[] idleUids = mUsageStats.getIdleUidsForUser(user.id);
+                    for (int uid : idleUids) {
+                        if (!mPowerSaveTempWhitelistAppIds.get(UserHandle.getAppId(uid), false)) {
+                            // quick check: if this uid doesn't have INTERNET permission, it
+                            // doesn't have network access anyway, so it is a waste to mess
+                            // with it here.
+                            if (hasInternetPermissions(uid)) {
+                                uidRules.put(uid, FIREWALL_RULE_DENY);
+                            }
                         }
                     }
                 }
@@ -3687,7 +3690,9 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
      * changed.
      */
     void updateRulesForAppIdleParoleUL() {
-        boolean paroled = mUsageStats.isAppIdleParoleOn();
+        boolean paroled = false;
+        if (mUsageStats != null)
+            paroled = mUsageStats.isAppIdleParoleOn();
         boolean enableChain = !paroled;
         enableFirewallChainUL(FIREWALL_CHAIN_STANDBY, enableChain);
 
@@ -3858,7 +3863,7 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
 
         if (packages != null) {
             for (String packageName : packages) {
-                if (!mUsageStats.isAppIdle(packageName, uid, userId)) {
+                if ((mUsageStats != null) && (!mUsageStats.isAppIdle(packageName, uid, userId))) {
                     return false;
                 }
             }
-- 
2.21.0

