From 7538596f9c13eda0a32340f55a6e6ad26e5b7238 Mon Sep 17 00:00:00 2001
From: codex-corp <hany.alsamman@gmail.com>
Date: Mon, 1 Dec 2014 13:44:28 -0200
Subject: [PATCH 08/25] Framework: add Settings.System boolean helper methods

Change-Id: I7acd26e41ed4951a03afded276f367391ac372b5
Signed-off-by: Josh Fox (XlxFoXxlX) <joshfox87@gmail.com>
---
 core/java/android/provider/Settings.java | 44 ++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index b7673c3c147c..58d70c48fd95 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -2516,6 +2516,32 @@ public final class Settings {
             }
         }
 
+        /**
+         * @hide
+         * Convenience function for retrieving a single system settings value
+         * as a boolean.  Note that internally setting values are always
+         * stored as strings; this function converts the string to a boolean
+         * for you. It will only return true if the stored value is "1"
+         *
+         * @param cr The ContentResolver to access.
+         * @param name The name of the setting to retrieve.
+         * @param def Value to return if the setting is not defined.
+         *
+         * @return The setting's current value, or 'def' if it is not defined
+         * or not a valid integer.
+         */
+        public static boolean getBoolean(ContentResolver cr, String name, boolean def) {
+            String v = getString(cr, name);
+            try {
+                if(v != null)
+                    return "1".equals(v);
+                else
+                    return def;
+            } catch (NumberFormatException e) {
+                return def;
+            }
+        }
+
         /**
          * Convenience function for updating a single settings value as an
          * integer. This will either create a new entry in the table if the
@@ -2539,6 +2565,24 @@ public final class Settings {
             return putStringForUser(cr, name, Integer.toString(value), userHandle);
         }
 
+        /**
+         * @hide
+         * Convenience function for updating a single settings value as a
+         * boolean. This will either create a new entry in the table if the
+         * given name does not exist, or modify the value of the existing row
+         * with that name.  Note that internally setting values are always
+         * stored as strings, so this function converts the given value to a
+         * string (1 or 0) before storing it.
+         *
+         * @param cr The ContentResolver to access.
+         * @param name The name of the setting to modify.
+         * @param value The new value for the setting.
+         * @return true if the value was set, false on database errors
+         */
+        public static boolean putBoolean(ContentResolver cr, String name, boolean value) {
+            return putString(cr, name, value ? "1" : "0");
+        }
+
         /**
          * Convenience function for retrieving a single system settings value
          * as a {@code long}.  Note that internally setting values are always
-- 
2.17.1

