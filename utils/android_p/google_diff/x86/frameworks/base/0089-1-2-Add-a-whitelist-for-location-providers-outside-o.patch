From dec57135a44dbbe893e7c969fbb583343933c2a7 Mon Sep 17 00:00:00 2001
From: oshmoun <oshmoun100@googlemail.com>
Date: Sat, 24 Feb 2018 13:40:59 +0100
Subject: [PATCH] [1/2] Add a whitelist for location providers outside of
 /system

Based on a patch by danielegobbetti@github:
https://github.com/microg/android_packages_apps_UnifiedNlp/commit/f5a4569e9145d45678b76dc8cb5f4aa582c0ebdb
Additionally, a whitelist for packages is added based on a prop.
With the whitelist, it is possible to selectively disable PackageManager.MATCH_SYSTEM_ONLY when needed.

Change-Id: Ibe99a1ef6ab8c88945f47de95615e1fb869f0cdb
(cherry picked from commit 07969f60591aa2ff6010624f22824c1fc362eaff)
---
 .../java/com/android/server/ServiceWatcher.java | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/ServiceWatcher.java b/services/core/java/com/android/server/ServiceWatcher.java
index 42c836eab7d7..8684d556c101 100644
--- a/services/core/java/com/android/server/ServiceWatcher.java
+++ b/services/core/java/com/android/server/ServiceWatcher.java
@@ -32,6 +32,7 @@ import android.content.pm.Signature;
 import android.content.res.Resources;
 import android.os.Handler;
 import android.os.IBinder;
+import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.util.Log;
 import android.util.Slog;
@@ -53,6 +54,7 @@ public class ServiceWatcher implements ServiceConnection {
     private static final boolean D = false;
     public static final String EXTRA_SERVICE_VERSION = "serviceVersion";
     public static final String EXTRA_SERVICE_IS_MULTIUSER = "serviceIsMultiuser";
+    private static final String WHITELIST_PACKAGELIST_PROPERTY = "ro.services.whitelist.packagelist";
 
     private final String mTag;
     private final Context mContext;
@@ -89,12 +91,23 @@ public class ServiceWatcher implements ServiceConnection {
             List<String> initialPackageNames) {
         PackageManager pm = context.getPackageManager();
         ArrayList<HashSet<Signature>> sigSets = new ArrayList<HashSet<Signature>>();
+
+        String whitelistPackagesValue = SystemProperties.get(WHITELIST_PACKAGELIST_PROPERTY,"");
+        String[] whitelistPackagesArray = whitelistPackagesValue.split(",");
+        HashSet<String> whitelistPackagesSet = new HashSet<String>(Arrays.asList(whitelistPackagesArray));
+
         for (int i = 0, size = initialPackageNames.size(); i < size; i++) {
             String pkg = initialPackageNames.get(i);
             try {
                 HashSet<Signature> set = new HashSet<Signature>();
-                Signature[] sigs = pm.getPackageInfo(pkg, PackageManager.MATCH_SYSTEM_ONLY
-                        | PackageManager.GET_SIGNATURES).signatures;
+                Signature[] sigs = null;
+                if(whitelistPackagesSet != null && whitelistPackagesSet.contains(pkg)) {
+                    sigs = pm.getPackageInfo(pkg, PackageManager.GET_SIGNATURES).signatures;
+                    Log.i("ServiceWatcher", pkg + " is whitelisted, ignored PackageManager.MATCH_SYSTEM_ONLY");
+                } else {
+                    sigs = pm.getPackageInfo(pkg, PackageManager.MATCH_SYSTEM_ONLY
+                            | PackageManager.GET_SIGNATURES).signatures;
+                }
                 set.addAll(Arrays.asList(sigs));
                 sigSets.add(set);
             } catch (NameNotFoundException e) {
-- 
2.17.1

