From d1d6555ca670da64e0f77468de4a276edec6d318 Mon Sep 17 00:00:00 2001
From: Michael Goffioul <michael.goffioul@lincor.com>
Date: Sat, 28 Sep 2019 20:32:44 -0400
Subject: [PATCH 18/24] ueventd: auto load modules on uevents

---
 init/ueventd.cpp            |  2 +-
 libmodprobe/libmodprobe.cpp | 17 +++++++++++++++++
 rootdir/init.rc             |  5 -----
 rootdir/ueventd.rc          |  1 +
 toolbox/modprobe.cpp        |  4 +---
 5 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/init/ueventd.cpp b/init/ueventd.cpp
index 526d6f6a3..989977580 100644
--- a/init/ueventd.cpp
+++ b/init/ueventd.cpp
@@ -307,7 +307,7 @@ int ueventd_main(int argc, char** argv) {
             std::move(ueventd_configuration.external_firmware_handlers)));
 
     if (ueventd_configuration.enable_modalias_handling) {
-        std::vector<std::string> base_paths = {"/odm/lib/modules", "/vendor/lib/modules"};
+        std::vector<std::string> base_paths = {"/system/lib/modules", "/odm/lib/modules", "/vendor/lib/modules"};
         uevent_handlers.emplace_back(std::make_unique<ModaliasHandler>(base_paths));
     }
     UeventListener uevent_listener(ueventd_configuration.uevent_socket_rcvbuf_size);
diff --git a/libmodprobe/libmodprobe.cpp b/libmodprobe/libmodprobe.cpp
index f22bbf18b..15dc3f1df 100644
--- a/libmodprobe/libmodprobe.cpp
+++ b/libmodprobe/libmodprobe.cpp
@@ -19,6 +19,8 @@
 #include <fnmatch.h>
 #include <sys/stat.h>
 #include <sys/syscall.h>
+#include <sys/utsname.h>
+#include <unistd.h>
 
 #include <algorithm>
 #include <set>
@@ -314,24 +316,39 @@ void Modprobe::ParseKernelCmdlineOptions(void) {
 
 Modprobe::Modprobe(const std::vector<std::string>& base_paths) {
     using namespace std::placeholders;
+    std::string release;
+    struct utsname uts;
+
+    uname(&uts);
+    release = uts.release;
 
     for (const auto& base_path : base_paths) {
+        const std::string release_base_path = base_path + "/" + release;
+
         auto alias_callback = std::bind(&Modprobe::ParseAliasCallback, this, _1);
+        ParseCfg(release_base_path + "/modules.alias", alias_callback);
         ParseCfg(base_path + "/modules.alias", alias_callback);
 
+        auto dep_callback_release = std::bind(&Modprobe::ParseDepCallback, this, release_base_path, _1);
+        ParseCfg(release_base_path + "/modules.dep", dep_callback_release);
+
         auto dep_callback = std::bind(&Modprobe::ParseDepCallback, this, base_path, _1);
         ParseCfg(base_path + "/modules.dep", dep_callback);
 
         auto softdep_callback = std::bind(&Modprobe::ParseSoftdepCallback, this, _1);
+        ParseCfg(release_base_path + "/modules.softdep", softdep_callback);
         ParseCfg(base_path + "/modules.softdep", softdep_callback);
 
         auto load_callback = std::bind(&Modprobe::ParseLoadCallback, this, _1);
+        ParseCfg(release_base_path + "/modules.load", load_callback);
         ParseCfg(base_path + "/modules.load", load_callback);
 
         auto options_callback = std::bind(&Modprobe::ParseOptionsCallback, this, _1);
+        ParseCfg(release_base_path + "/modules.options", options_callback);
         ParseCfg(base_path + "/modules.options", options_callback);
 
         auto blacklist_callback = std::bind(&Modprobe::ParseBlacklistCallback, this, _1);
+        ParseCfg(release_base_path + "/modules.blacklist", blacklist_callback);
         ParseCfg(base_path + "/modules.blacklist", blacklist_callback);
     }
 
diff --git a/rootdir/init.rc b/rootdir/init.rc
index 51b561f69..df636fc6d 100644
--- a/rootdir/init.rc
+++ b/rootdir/init.rc
@@ -16,11 +16,6 @@ on early-init
     # Disable sysrq from keyboard
     write /proc/sys/kernel/sysrq 0
 
-    # Android doesn't need kernel module autoloading, and it causes SELinux
-    # denials.  So disable it by setting modprobe to the empty string.  Note: to
-    # explicitly set a sysctl to an empty string, a trailing newline is needed.
-    write /proc/sys/kernel/modprobe \n
-
     # Set the security context of /adb_keys if present.
     restorecon /adb_keys
 
diff --git a/rootdir/ueventd.rc b/rootdir/ueventd.rc
index bfd593199..8e4d57dae 100644
--- a/rootdir/ueventd.rc
+++ b/rootdir/ueventd.rc
@@ -1,4 +1,5 @@
 firmware_directories /system/lib/firmware
+modalias_handling enabled
 uevent_socket_rcvbuf_size 16M
 
 subsystem graphics
diff --git a/toolbox/modprobe.cpp b/toolbox/modprobe.cpp
index 1b5f54e8f..684f33d35 100644
--- a/toolbox/modprobe.cpp
+++ b/toolbox/modprobe.cpp
@@ -138,9 +138,7 @@ extern "C" int modprobe_main(int argc, char** argv) {
         }
     }
     if (mod_dirs.empty()) {
-        std::cerr << "No module configuration directories given." << std::endl;
-        print_usage();
-        return EXIT_FAILURE;
+        mod_dirs.emplace_back("/system/lib/modules");
     }
     if (parameter_count && modules.size() > 1) {
         std::cerr << "Only one module may be loaded when specifying module parameters."
-- 
2.25.1

